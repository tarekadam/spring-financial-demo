type Player {
    id: ID!
    name: String!
    score: Int!
    address: Address @hasOne
}

type Address {
    street: String!,
    city: String!,
    state: String!,
    zip: String!
}

type Query {
    player(id: ID! @eq) : Player @find
    players :  [Player!]! @all @orderBy(column: "score", direction: DESC),
}

type Mutation {
    createPlayer(
        name: String! @rules(apply: ["string", "unique:players", "max: 10"])
        address: AddressOrm
    ) : Player! @create

    deletePlayer(id: ID!) : Player @delete

    play(id: ID!, operation: String! @rules(apply: ["string", "in:increment,decrement"])) : Player!
}

input AddressOrm{
    create: AddressFields
}

input AddressFields{
    street: String! @rules(apply: ["string", "max: 100"])
    city: String! @rules(apply: ["string", "max: 100"])
    state: String! @rules(apply: ["string", "max: 2"])
    zip: String! @rules(apply: ["string", "max: 5"])
}
